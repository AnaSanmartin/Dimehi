(deftemplate proof
	(slot userName)
	(slot diseaseName)
        (slot testName)
	(slot validated)
)

(deftemplate user
	(slot name)
	(slot answer1 (allowed-integers 0 1 2 3))
	(slot answer2 (allowed-integers 0 1 2 3))
	(slot answer3 (allowed-integers 0 1 2 3))
	(slot answer4 (allowed-integers 0 1 2 3))
        (slot answer5 (allowed-integers 0 1 2 3))
	(slot answer6 (allowed-integers 0 1 2 3))
        (slot answer7 (allowed-integers 0 1 2 3))
	(slot answer8 (allowed-integers 0 1 2 3))
	(slot answer9 (allowed-integers 0 1 2 3))
	(slot answer10 (allowed-integers 0 1 2 3))
	(slot answer11 (allowed-integers 0 1 2 3))
        (slot answer12 (allowed-integers 0 1 2 3))
	(slot answer13 (allowed-integers 0 1 2 3))
        (slot answer14 (allowed-integers 0 1 2 3))
	(slot answer15 (allowed-integers 0 1 2 3))
	(slot answer16 (allowed-integers 0 1 2 3))
	(slot answer17 (allowed-integers 0 1 2 3))
	(slot answer18 (allowed-integers 0 1 2 3))
        (slot answer19 (allowed-integers 0 1 2 3))
	(slot answer20 (allowed-integers 0 1 2 3))
        (slot answer21 (allowed-integers 0 1 2 3))
	(slot answer22 (allowed-integers 0 1 2 3))
	(slot answer23 (allowed-integers 0 1 2 3))
        (slot answer24 (allowed-integers 0 1 2 3))
	(slot answer25 (allowed-integers 0 1 2 3))
        (slot answer26 (allowed-integers 0 1 2 3))
)

(deftemplate disease
	(slot nameDisease)
	(slot testName)
)

(deftemplate diseaseUser
	(slot nameUser)
	(slot nameDisease)
        (slot total)
        (slot count)
        (slot calculated)
	(slot valPrint)
)

(deftemplate testValues
	(slot nameDisease)
	(slot testName)
	(slot answer1 (allowed-integers 0 1 2 3))
        (slot answer2 (allowed-integers 0 1 2 3))
        (slot answer3 (allowed-integers 0 1 2 3))
        (slot answer4 (allowed-integers 0 1 2 3))
        (slot answer5 (allowed-integers 0 1 2 3))
        (slot answer6 (allowed-integers 0 1 2 3))
        (slot answer7 (allowed-integers 0 1 2 3))
	(slot answer8 (allowed-integers 0 1 2 3))
	(slot answer9 (allowed-integers 0 1 2 3))
	(slot answer10 (allowed-integers 0 1 2 3))
	(slot answer11 (allowed-integers 0 1 2 3))
        (slot answer12 (allowed-integers 0 1 2 3))
	(slot answer13 (allowed-integers 0 1 2 3))
        (slot answer14 (allowed-integers 0 1 2 3))
	(slot answer15 (allowed-integers 0 1 2 3))
	(slot answer16 (allowed-integers 0 1 2 3))
	(slot answer17 (allowed-integers 0 1 2 3))
	(slot answer18 (allowed-integers 0 1 2 3))
        (slot answer19 (allowed-integers 0 1 2 3))
	(slot answer20 (allowed-integers 0 1 2 3))
        (slot answer21 (allowed-integers 0 1 2 3))
	(slot answer22 (allowed-integers 0 1 2 3))
	(slot answer23 (allowed-integers 0 1 2 3))
        (slot answer24 (allowed-integers 0 1 2 3))
	(slot answer25 (allowed-integers 0 1 2 3))
        (slot answer26 (allowed-integers 0 1 2 3))
)

(deffacts Initial
        (user )

	(disease (nameDisease "Eating Disorder")(testName "Eating Attitudes Test - 26 Item"))

        (testValues (nameDisease "Eating Disorder") (testName "Eating Attitudes Test - 26 Item") (answer1 3) (answer2 3) (answer3 3) (answer4 3) (answer5 3) (answer6 3) (answer7 3) (answer8 3) (answer9 3) (answer10 3) (answer11 3) (answer12 3) (answer13 3) (answer14 3) (answer15 3) (answer16 3) (answer17 3) (answer18 3) (answer19 3) (answer20 3) (answer21 3) (answer22 3) (answer23 3) (answer24 3) (answer25 3) (answer26 3))
)

(defrule GetName
	(declare (salience 500))
	?u <- (user (name nil)) 
	=>
	(printout t "What is your name: ")	
	(modify ?u (name (read))) 
)

(defrule Answer1
	(declare (salience 500))
	?u <- (user (answer1 nil)) 
	=>
	(printout t "I am terrified about being overweight: ")	
	(modify ?u (answer1 (read))) 
)


(defrule Answer2
	(declare (salience 500))
	?u <- (user (answer2 nil)) 
	=>
	(printout t " I avoid eating when I am hungry: ")	
	(modify ?u (answer2 (read))) 
)


(defrule Answer3
	(declare (salience 500))
	?u <- (user (answer3 nil)) 
	=>
	(printout t " I find myself preoccupied with food: ")	
	(modify ?u (answer3 (read))) 
)


(defrule Answer4
	(declare (salience 500))
	?u <- (user (answer4 nil)) 
	=>
	(printout t " I have gone on eating binges where I feel that I may not be able to stop: ")	
	(modify ?u (answer4 (read))) 
)


(defrule Answer5
	(declare (salience 500))
	?u <- (user (answer5 nil)) 
	=>
	(printout t " I cut my food into small pieces: ")	
	(modify ?u (answer5 (read))) 
)


(defrule Answer6
	(declare (salience 500))
	?u <- (user (answer6 nil)) 
	=>
	(printout t "I aware of the calorie content of foods that I eat: ")	
	(modify ?u (answer6 (read))) 
)


(defrule Answer7
	(declare (salience 500))
	?u <- (user (answer7 nil)) 
	=>
	(printout t " I particularly avoid food with a high carbohydrate content (i.e. bread, rice, potatoes, etc.): ")	
	(modify ?u (answer7 (read))) 
)

(defrule Answer8
	(declare (salience 500))
	?u <- (user (answer8 nil)) 
	=>
	(printout t " I feel that others would prefer if I ate more: ")	
	(modify ?u (answer8 (read))) 
)


(defrule Answer9
	(declare (salience 500))
	?u <- (user (answer9 nil)) 
	=>
	(printout t " I vomit after I have eaten: ")	
	(modify ?u (answer9 (read))) 
)


(defrule Answer10
	(declare (salience 500))
	?u <- (user (answer10 nil)) 
	=>
	(printout t " I feel extremely guilty after eating: ")	
	(modify ?u (answer10 (read))) 
)


(defrule Answer11
	(declare (salience 500))
	?u <- (user (answer11 nil)) 
	=>
	(printout t " I am occupied with a desire to be thinner: ")	
	(modify ?u (answer11 (read))) 
)


(defrule Answer12
	(declare (salience 500))
	?u <- (user (answer12 nil)) 
	=>
	(printout t " I think about burning up calories when I exercise: ")	
	(modify ?u (answer12 (read))) 
)


(defrule Answer13
	(declare (salience 500))
	?u <- (user (answer13 nil)) 
	=>
	(printout t " Other people think that I am too thin: ")	
	(modify ?u (answer13 (read))) 
)


(defrule Answer14
	(declare (salience 500))
	?u <- (user (answer14 nil)) 
	=>
	(printout t " I am preoccupied with the thought of having fat on my body: ")	
	(modify ?u (answer14 (read))) 
)

(defrule Answer15
	(declare (salience 500))
	?u <- (user (answer15 nil)) 
	=>
	(printout t " I take longer than others to eat my meals: ")	
	(modify ?u (answer15 (read))) 
)


(defrule Answer16
	(declare (salience 500))
	?u <- (user (answer16 nil)) 
	=>
	(printout t "I avoid foods with sugar in them: ")	
	(modify ?u (answer16 (read))) 
)


(defrule Answer17
	(declare (salience 500))
	?u <- (user (answer17 nil)) 
	=>
	(printout t " I eat diet foods: ")	
	(modify ?u (answer17 (read))) 
)


(defrule Answer18
	(declare (salience 500))
	?u <- (user (answer18 nil)) 
	=>
	(printout t " I feel that food controls my life: ")	
	(modify ?u (answer18 (read))) 
)


(defrule Answer19
	(declare (salience 500))
	?u <- (user (answer19 nil)) 
	=>
	(printout t "I display self-control around food: ")	
	(modify ?u (answer19 (read))) 
)


(defrule Answer20
	(declare (salience 500))
	?u <- (user (answer20 nil)) 
	=>
	(printout t " I feel that others pressure me to eat: ")	
	(modify ?u (answer20 (read))) 
)


(defrule Answer21
	(declare (salience 500))
	?u <- (user (answer21 nil)) 
	=>
	(printout t "I give too much time and thought to food: ")	
	(modify ?u (answer21 (read))) 
)

(defrule Answer22
	(declare (salience 500))
	?u <- (user (answer22 nil)) 
	=>
	(printout t " I feel uncomfortable after eating sweets: ")	
	(modify ?u (answer22 (read))) 
)


(defrule Answer23
	(declare (salience 500))
	?u <- (user (answer23 nil)) 
	=>
	(printout t " I engage in dieting behavior: ")	
	(modify ?u (answer23 (read))) 
)


(defrule Answer24
	(declare (salience 500))
	?u <- (user (answer24 nil)) 
	=>
	(printout t " I like my stomach to be empty: ")	
	(modify ?u (answer24 (read))) 
)


(defrule Answer25
	(declare (salience 500))
	?u <- (user (answer25 nil)) 
	=>
	(printout t "I have the impulse to vomit after meals: ")	
	(modify ?u (answer25 (read))) 
)


(defrule Answer26
	(declare (salience 500))
	?u <- (user (answer26 nil)) 
	=>
	(printout t " I enjoy trying new rich foods: ")	
	(modify ?u (answer26 (- 3 (read)))) 
)


(defrule setProofs
	(declare (salience 500))
	?u <- (user (name ?n) (answer1 ?a1) (answer2 ?a2) (answer3 ?a3) (answer4 ?a4) (answer5 ?a5) (answer6 ?a6) (answer7 ?a7) (answer8 ?a8) (answer9 ?a9) (answer10 ?a10) (answer11 ?a11) (answer12 ?a12) (answer13 ?a13) (answer14 ?a14) (answer15 ?a15) (answer16 ?a16) (answer17 ?a17) (answer18 ?a18) (answer19 ?a19) (answer20 ?a20) (answer21 ?a21) (answer22 ?a22) (answer23 ?a23) (answer24 ?a24) (answer25 ?a25) (answer26 ?a26))
	(test(neq ?n nil))

	=>

	(assert (diseaseUser (nameUser ?n) (nameDisease "Eating Disorder") (total 26) (count 0) (calculated FALSE) (valPrint FALSE)))
        (assert (proof (userName ?n) (diseaseName "Eating Disorder") (testName "Eating Attitudes Test - 26 Item") (validated FALSE)))
)
		
(defrule testQuestion
	(declare (salience 400))
	?p <- (proof (userName ?n) (diseaseName ?name1) (testName ?tN) (validated FALSE))
	?u <- (user (name ?n) (answer1 ?a1) (answer2 ?a2) (answer3 ?a3) (answer4 ?a4) (answer5 ?a5) (answer6 ?a6) (answer7 ?a7) (answer8 ?a8) (answer9 ?a9) (answer10 ?a10) (answer11 ?a11) (answer12 ?a12) (answer13 ?a13) (answer14 ?a14) (answer15 ?a15) (answer16 ?a16) (answer17 ?a17) (answer18 ?a18) (answer19 ?a19) (answer20 ?a20) (answer21 ?a21) (answer22 ?a22) (answer23 ?a23) (answer24 ?a24) (answer25 ?a25) (answer26 ?a26))
	?r <- (diseaseUser (nameUser ?n) (nameDisease ?name1) (total ?t) (count ?c) (calculated ?cal) (valPrint FALSE))

	=>
        (modify ?r (count (+ ?c ?a1 ?a2 ?a3 ?a4 ?a5 ?a6 ?a7 ?a8 ?a9 ?a10 ?a11 ?a12 ?a13 ?a14 ?a15 ?a16 ?a17 ?a18 ?a19 ?a20 ?a21 ?a22 ?a23 ?a24 ?a25 ?a26)))
      	(modify ?p (validated TRUE))
)	


(defrule assert-unprinted "Asserts each item that needs to be printed."
  	(declare (salience 300))
  	(diseaseUser (nameUser ?name2) (nameDisease ?name1) (total ?t) (count ?c) (calculated ?cal) (valPrint FALSE))
  	=>
  	(assert (unprinted ?name1))
        (printout t "The user " ?name2 " has obtained " ?c " points" crlf)
        (if (<= ?c 13)
      	     	then 
        	(printout t "The patient is considered as normal." crlf))
	(if (and (>= ?c 14) (<= ?c 20))
      	     	then 
             	(printout t "The patient has mild eating disorder. Please, take care of yourself and rest." crlf))
	(if (and (>= ?c 21) (<= ?c 34))
      	     	then 
             	(printout t "The patient has moderate eating disorder. Please refer to a specialist." crlf))
	(if (>= ?c 35)
      	     	then 
        	(printout t "The patient has severe eating disorder. Please refer to a specialist as soon as possible." crlf))
)
